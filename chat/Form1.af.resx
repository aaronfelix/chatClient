<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAeCAYAAAC49JeZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAAYdEVYdFNvZnR3YXJlAHBhaW50Lm5ldCA0LjAuNvyMY98A
        AARhSURBVFhH1ZhXbuRWEEW9BeWcc1iEcivnnHPOOUt4KyM1Gtvwpsr3PqiIJ4JsdVvSYPxxgSabQh8W
        qo6K/KOlpUWY1tZWaW9vl66uLunp6ZG+vj4ZHByU4eFhGRsbk8nJSZmenpa5uTlZWFiQ5eVlWVtbk42N
        Ddne3pbd3V05ODiQo6MjOT09lYuLC7m6upLb21u5v7+Xp6cneX5+/pIE0BqCd3Z2Snd3t/T29srAwIAM
        DQ3J6OioTExMyNTUlMzOzsr8/LwsLS3J6uqqrK+vy9bWluzs7Mj+/r4cHh7KycmJnJ+fy+Xlpdzc3Mjd
        3Z08Pj5GQqQbF9owqLjp6OgwiUTCoNoG1TYjIyMGwAaVNqi0AawBrEGVDapsAGpQYYMKG0AaQBpU16C6
        Bj/ylYmGVnBU26DaFhyVNqh0AI4qvwNHhQPws7OzAPzh4SHqhz+TeGimra0tEhy9bWZmZiw4+tqCb25u
        BuDHx8cBOPr5q8GTQzMKjsE0/f39FhxDGYBjIC04BtKCYxgNhtGCo58NBvGrwT+GZjCYBkax4BhKA5sE
        4BjId+AYxkhwDKHBEEZBpJvUoJko8PHxcQOTWPDFxUULDosE4DCIgUEs+PX19VeBpw7NEJxGgQYtOI2i
        4DQKwVdWViw4jbK3txeAw9kB+CeN8jF0VlbWn0x2dvYrj3Nzc18UXFVIcFVhHDhVSPBUVdjY2OhrQt8l
        h87MzPzLPQb4j5ycnB/JHB5W4Wcc3tzc7DGh8/HQGRkZ/7jHGoL/KoenDY0q/+0eh+M6XFWYjsNTUeF/
        gmZ7MOjpn+53GtfhBQUFXlFRkeeqsKyszKuoqPAqKys9gldXV3s1NTVebW2tF+dwFzQKGtd+2NMW/G0Y
        fyKvbA/3GholLy/PVxUmA1cVAt4HvB92uDt0dXV1r1GDiLayG2MstBsH+h04BtOHUXw6nEYpLCy0FVcV
        lpaWeuXl5Z7rcK24q8L6+nq/qanpXVWjoDEPgutTg9a8QVv9MYRW8Pz8fI9tQnBVYUlJicdquyqsqqry
        CO46vKGhwQOg5xqFrRGG1j09LWgmBP1CaHeddR1eXFzssdquw9kqBKfDVYXoc5/VdlUYVWlcb/f02EF0
        j9240PhM6Bd+VnBVIcEJzWq7KtQedx3OHkcf++rwOGjcqH3AiIXmELrnGPZ2+JxCMwTHYHoKzv4mOB2u
        KmSPEzzscFZbHY52scBhaNyofaxLWmnHHtYg7jVu2CJv8VSF7HH2N+ID3qdRUHUf7eKjz33A++pw3QoJ
        zopThVHgmAn7WJd2T6cSgutWyH8+ydbZZHt4eCvETNiH6W+BZuL2cF1n4/ZwXWej9nB9C/Bt0IyC6zr7
        0R4et84qOObCvgX4VmjG3cPddTadPVxViPYSgn87dJzD3T2cKiS4rrOuwwmuKtR3L98OzUQ5PNV11t3D
        sU0KbvjXQDMEj9vD1eEf7eH4O/uqzoX+bYO5ePeq7n8BzcD9ghaTRCIh/wKgsJcBevdMHQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>